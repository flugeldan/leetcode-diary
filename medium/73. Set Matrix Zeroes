# 73. Set Matrix Zeroes
# Difficulty: Medium
# Link: https://leetcode.com/problems/set-matrix-zeroes/description/?envType=study-plan-v2&envId=programming-skills

Well, first medium problem, i have spent about 1,5h. After i sent code to chat for a quick review, as it said, i can use flags and sets.
I will come back to this after i will take a rest, so i could rethink the code, and understand the logic of the optimized version.

class Solution(object):
    def setZeroes(self, matrix):
        extra=[]
        for row in range(len(matrix)):
            for col in range(len(matrix[row])):
                column=matrix[row]
                if column[col]==0:
                    extra.append((row, col))
        for row, col in extra:
            for i in range(len(matrix)):
                matrix[i][col]=0
            for j in range(len(matrix[row])):
                matrix[row][j]=0
        return matrix

1.Using a first cycle to remember every row and column, adding them into list extra with coordinates.
2.Creating second cycle with 2 cycles inside.
First cycle sets all columns to 0 by using coordinates.
Second cycle sets entire row to zero, using its length (len(matrix[row))
Problems in this code: 
Sometimes you might set zero where you already once did, so on big data its bad for time

To optimize, you can use flags in the matrix itself (in the first row and the first column).

Более оптимизированное решение, использует первый столбик и строку как маркеры, чтобы от них если есть ноль спускаться по столбам снизу обнуляя столбик и строку сразу.
Использует проверку в начале чтобы проверить есть ли в первой строке или столбце нули. (И запоминает были ли там нули или нет)
Потом уже циклами использует первую строку как маркер


class Solution(object):
    def setZeroes(self, matrix):
        rows = len(matrix)
        cols = len(matrix[0])
        
        row0_zero = any(matrix[0][j] == 0 for j in range(cols))
        col0_zero = any(matrix[i][0] == 0 for i in range(rows))
        
        # Используем первую строку и первый столбец как флаги
        for i in range(1, rows):
            for j in range(1, cols):
                if matrix[i][j] == 0:
                    matrix[i][0] = 0
                    matrix[0][j] = 0
        
        # Обнуляем на основе флагов
        for i in range(1, rows):
            for j in range(1, cols):
                if matrix[i][0] == 0 or matrix[0][j] == 0:
                    matrix[i][j] = 0
        
        # Обнуляем первую строку при необходимости
        if row0_zero:
            for j in range(cols):
                matrix[0][j] = 0
        
        # Обнуляем первый столбец при необходимости
        if col0_zero:
            for i in range(rows):
                matrix[i][0] = 0
я понял что мы используем первую строку как маркер, чтобы там ставить нули (и это не меняло массив сразу там чтобы не было лишних обнулений), потом в проверке мы проверяем по столбцам 
потом проверка, первой строки и столбца, если там где то есть нолик, то он будет спускаться ставя нули по столбцам, а так же обнулит строку.
Мы используем первую строку для пометки какие столбцы надо удалить, и первый столбец для пометки какие строки нужно удалить.
Step 1: Check if the first row and the first column should be zeroed
If there is at least one 0 in the first row → in the future we will zero the whole first row.

Go through the rest of the matrix starting from (1,1)

matrix[i][0] = 0 - so row i should be zeroed out.

matrix[0][j] = 0 - so column j should be zeroed out.

Step 3: Second pass - zeroing by flags
Here we don't touch the first row and column so that we don't lose the flags.

Step 4: Zero the first row and the first column (if necessary)
IMPORTANT: we do it at the end, because they store flags, and it was impossible to zero them before.





                
                        




