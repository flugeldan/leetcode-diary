# 1572. 1523. Count Odd Numbers in an Interval Range
# Difficulty: Easy
# Link: https://leetcode.com/problems/count-odd-numbers-in-an-interval-range/description/?envType=study-plan-v2&envId=programming-skills

class Solution(object):
    def countOdds(self, low, high):
        return (high-low)//2 +(high%2 or low%2)
        
        


Интересная задача, вот мои мысли



1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25

22 и 7 (четное и нечетное)
16 номеров между ними 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
16 четное число и содержит 7, 9, 11, 13, 15, 17, 19, 21 == 8 нечетных чисел(половина)

14 5 (четное и нечетное)
5 6 7 8 9 10 11 12 13 14 == 5, 7 9 11 13 когда большее- меньшее и +1 чтобы включить меньшее четное, то нечетных ровна половина

Нечетное и нечетное
7 13
7 8 9 10 11 12 13 == 7, чисел
если оба нечетны то половина +1

если четное и четное
8 12
8 9 10 11 12 == то половина-1
8 20
8 9 10 11 12 13 14 15 16 17 18 19 20       13//2=6

9 15          10 11 12 13 14 15
3

четное и четное
10 16
11 12 13 14 15 16
3

11 16
12 13 14 15 16
5
2                              четн нечетн четн нечетн четн 
Если одно четное дргуое нечетное, значит оба будут покрывать 1 слева четный другой справа нечетный, и это будет половина
Если хотя бы 1 справа или слева нечетное, можем прибавить +1 как остаток чтобы он был включительным, т.е high%2 or low%2 это проверка по бокам включительно, если сбоку четный будет прибавляться
%2==0 потом идет смотреть в другой бок если и он нечетный, то он включит его прибавив 1, а 1 это остаток от деления нечетного на 2, такой элегантный трюк


По сути //2 дает примерно половину, но делает -1, потому что округляет от 0.5 в меньшую сторону
В итоге у нас недостает 1 числа, и мы 
Короче просто пары нечетн и четн контрят друг друга

(high - low) // 2 — даёт "базу": сколько чёт/нечет пар.
+ (low % 2 or high % 2) — если хотя бы одно число нечётное, то диапазон включает лишнее нечётное число. Поэтому и прибавляем один, а не два.







