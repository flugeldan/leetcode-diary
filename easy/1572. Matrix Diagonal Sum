#  1572. Matrix Diagonal Sum
# Difficulty: Easy
# Link: https://leetcode.com/problems/matrix-diagonal-sum/description/?envType=study-plan-v2&envId=programming-skills

class Solution(object):
    def diagonalSum(self, mat):
        diag=sum([mat[i][i] for i in range(len(mat))])
        for i in range(len(mat)):
            if len(mat) - 1 - i!=i:
                diag += mat[i][len(mat) - 1 - i]
        return diag
        

Довольно легкая задачка, сначала я думал, ну они пересекаются в точках [1][1] в квадратной матрице, обратная диагонаьл в ней вычисляется по формуле
2-i, но по сути, 2 это количество строк в матрице, но только с -1 из за того что нумерация строк начинается с нуля
И для универсальной формулы любой матрицы, их пересечение в точках [i][i] где при прохождении обратной диагональю будет в столбцах с одинаковым адресами столбцов
т.е [адрес столбца диагонали левой] != [адрес столбца диагонали правой]
(обычная диагональ), т.е i=len(mat)-1-i (это len(mat)-1 вмест 2)
И пишем условие, для любого объекта цикла чей столбец len(mat)-1-i не равен простому [i][i] потому что пересекаются они только там

[0][0]                 [0][2]
     [1][1]                  [1][1]
          [2][2]                   [2][0]
 [1,2,3]                          
 [4,5,6]
 [7,8,9]
